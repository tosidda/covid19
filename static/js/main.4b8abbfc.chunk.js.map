{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","seperator","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCounts","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","img","src","coronaPic","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b8abbfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1_JSn\",\"card\":\"Cards_card__1qm47\",\"infected\":\"Cards_infected__aj-hm\",\"recovered\":\"Cards_recovered__rcAdX\",\"deaths\":\"Cards_deaths__2qizq\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if (!confirmed) {\r\n        return \"Loading...\"\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                             start={0}\r\n                             end={confirmed.value} \r\n                             duration={2.5} \r\n                             separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} seperator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} seperator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {  data: {confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n        return modifiedData\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n       const { data: {countries}}= await axios.get(`${url}/countries`)\r\n       return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        console.log(dailyData)\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length !== 0 ?\r\n        (\r\n            <Line data={{\r\n                labels: dailyData.map(({date})  => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed})  => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true  \r\n                }, {\r\n                    data: dailyData.map(({deaths})  => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true  \r\n                }]\r\n            }}/>\r\n        ) : null\r\n    )\r\n\r\n    const barChart = (\r\n        data.confirmed \r\n        ? (\r\n            <Bar \r\n            data={{\r\n                labels: ['Infected','Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(255, 145, 0, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data:[data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n           {country ? barChart: lineChart} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n    useEffect(() => {\r\n        const fetchCounts = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchCounts()\r\n    }, [setFetchedCountries])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React from 'react'\r\nimport Cards from './components/Cards/Cards'\r\nimport Chart from './components/Chart/Chart'\r\nimport CountryPicker from './components/CountryPicker/CountryPicker'\r\nimport styles from \"./App.module.css\"\r\nimport { fetchData } from './api'\r\nimport coronaPic from './images/covid.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        console.log(country);\r\n        const fetchedData = await fetchData(country)\r\n        this.setState({data: fetchedData, country: country})\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData()\r\n        console.log(fetchedData)\r\n        this.setState({ data: fetchedData})\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.img} src={coronaPic} alt=\"poop\"/>\r\n               <Cards data={data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Y-mW\",\"img\":\"App_img__QYtyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3kJh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1Hz8d\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}